// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

// 服务名：test

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TextCheckReq struct {
	Req                  string   `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextCheckReq) Reset()         { *m = TextCheckReq{} }
func (m *TextCheckReq) String() string { return proto.CompactTextString(m) }
func (*TextCheckReq) ProtoMessage()    {}
func (*TextCheckReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

func (m *TextCheckReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextCheckReq.Unmarshal(m, b)
}
func (m *TextCheckReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextCheckReq.Marshal(b, m, deterministic)
}
func (m *TextCheckReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextCheckReq.Merge(m, src)
}
func (m *TextCheckReq) XXX_Size() int {
	return xxx_messageInfo_TextCheckReq.Size(m)
}
func (m *TextCheckReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TextCheckReq.DiscardUnknown(m)
}

var xxx_messageInfo_TextCheckReq proto.InternalMessageInfo

func (m *TextCheckReq) GetReq() string {
	if m != nil {
		return m.Req
	}
	return ""
}

type TextCheckResp struct {
	Resp                 string   `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextCheckResp) Reset()         { *m = TextCheckResp{} }
func (m *TextCheckResp) String() string { return proto.CompactTextString(m) }
func (*TextCheckResp) ProtoMessage()    {}
func (*TextCheckResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1}
}

func (m *TextCheckResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextCheckResp.Unmarshal(m, b)
}
func (m *TextCheckResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextCheckResp.Marshal(b, m, deterministic)
}
func (m *TextCheckResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextCheckResp.Merge(m, src)
}
func (m *TextCheckResp) XXX_Size() int {
	return xxx_messageInfo_TextCheckResp.Size(m)
}
func (m *TextCheckResp) XXX_DiscardUnknown() {
	xxx_messageInfo_TextCheckResp.DiscardUnknown(m)
}

var xxx_messageInfo_TextCheckResp proto.InternalMessageInfo

func (m *TextCheckResp) GetResp() string {
	if m != nil {
		return m.Resp
	}
	return ""
}

func init() {
	proto.RegisterType((*TextCheckReq)(nil), "testgrpc.api.v1.TextCheckReq")
	proto.RegisterType((*TextCheckResp)(nil), "testgrpc.api.v1.TextCheckResp")
}

func init() {
	proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e)
}

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 142 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x07, 0xb1, 0xd3, 0x8b, 0x0a, 0x92, 0xf5, 0x12,
	0x0b, 0x32, 0xf5, 0xca, 0x0c, 0x95, 0x14, 0xb8, 0x78, 0x42, 0x52, 0x2b, 0x4a, 0x9c, 0x33, 0x52,
	0x93, 0xb3, 0x83, 0x52, 0x0b, 0x85, 0x04, 0xb8, 0x98, 0x8b, 0x52, 0x0b, 0x25, 0x18, 0x15, 0x18,
	0x35, 0x38, 0x83, 0x40, 0x4c, 0x25, 0x65, 0x2e, 0x5e, 0x24, 0x15, 0xc5, 0x05, 0x42, 0x42, 0x5c,
	0x2c, 0x45, 0xa9, 0xc5, 0x05, 0x50, 0x35, 0x60, 0xb6, 0x51, 0x04, 0x17, 0x27, 0x5c, 0x91, 0x90,
	0x37, 0x17, 0x97, 0x47, 0x6a, 0x4e, 0x4e, 0x7e, 0x78, 0x7e, 0x51, 0x4e, 0x8a, 0x90, 0xac, 0x1e,
	0x9a, 0x9d, 0x7a, 0xc8, 0x16, 0x4a, 0xc9, 0xe1, 0x93, 0x2e, 0x2e, 0x48, 0x62, 0x03, 0x3b, 0xdc,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x77, 0xcb, 0xa5, 0xd8, 0xc6, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TextCheckClient is the client API for TextCheck service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TextCheckClient interface {
	HelloWorld(ctx context.Context, in *TextCheckReq, opts ...grpc.CallOption) (*TextCheckResp, error)
}

type textCheckClient struct {
	cc grpc.ClientConnInterface
}

func NewTextCheckClient(cc grpc.ClientConnInterface) TextCheckClient {
	return &textCheckClient{cc}
}

func (c *textCheckClient) HelloWorld(ctx context.Context, in *TextCheckReq, opts ...grpc.CallOption) (*TextCheckResp, error) {
	out := new(TextCheckResp)
	err := c.cc.Invoke(ctx, "/testgrpc.api.v1.TextCheck/HelloWorld", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TextCheckServer is the server API for TextCheck service.
type TextCheckServer interface {
	HelloWorld(context.Context, *TextCheckReq) (*TextCheckResp, error)
}

// UnimplementedTextCheckServer can be embedded to have forward compatible implementations.
type UnimplementedTextCheckServer struct {
}

func (*UnimplementedTextCheckServer) HelloWorld(ctx context.Context, req *TextCheckReq) (*TextCheckResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HelloWorld not implemented")
}

func RegisterTextCheckServer(s *grpc.Server, srv TextCheckServer) {
	s.RegisterService(&_TextCheck_serviceDesc, srv)
}

func _TextCheck_HelloWorld_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TextCheckReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextCheckServer).HelloWorld(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testgrpc.api.v1.TextCheck/HelloWorld",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextCheckServer).HelloWorld(ctx, req.(*TextCheckReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _TextCheck_serviceDesc = grpc.ServiceDesc{
	ServiceName: "testgrpc.api.v1.TextCheck",
	HandlerType: (*TextCheckServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HelloWorld",
			Handler:    _TextCheck_HelloWorld_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test.proto",
}
